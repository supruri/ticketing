"""
Django settings for myticket project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5g*)lk@+)8wkvaj_4_&rfl#+bp^837y+h8!5%s3h3kv^hi_qak'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['http://test-808280491.ap-northeast-2.elb.amazonaws.com', '*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'category',
    'users',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

INTERNAL_IPS = ('127.0.0.1')

ROOT_URLCONF = 'myticket.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myticket.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default' : {
        'ENGINE': 'django.db.backends.mysql',   # 사용할 엔진 설정. 그대로 두면 됨
        'NAME': 'my_ticket',                       # 연동할 MySQL의 데이터베이스 이름
        'USER': 'admin',                         # DB 접속 계정명
        'PASSWORD': 'admin1234',                   # 해당 DB 접속 계정 비밀번호
        'HOST': 'webdb.cag27zdkajz5.ap-northeast-2.rds.amazonaws.com',                    # 실제 DB 주소, 따로 설정 안했으면 그대로 두면 됨
        'PORT': '3306',                         # 포트번호, 따로 설정 안했으면 그대로 두면 됨
        'OPTIONS': {
            'sql_mode': 'traditional',
        }
    }
}
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ko'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/



# STATIC_ROOT = os.path.join(BASE_DIR, 'static') # 프로젝트 폴더(/)에서 static 폴더에 접근하여 정적 파일을 불러올 것이다.

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


if DEBUG:
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
else :
    #################### S3 설정을 위한 변수 ##############################
    # AWS_xxx 의 변수들은 aws-S3, boto3 모듈을 위한 변수들이다.
    from . import aws_access_tools as access

    # 버킷 접속 권한 설정
    AWS_ACCESS_KEY_ID = access.KEY_ID
    AWS_SECRET_ACCESS_KEY = access.SECRET_KEY
    AWS_REGION = access.AWS_REGION
    AWS_STORAGE_BUCKET_NAME = access.AWS_BUCKET
    #AWS_S3_CUSTOM_DOMAIN = f'{access.AWS_BUCKET}.s3.{access.AWS_REGION}.amazonaws.com'
    AWS_S3_CUSTOM_DOMAIN = access.AWS_CLOUDFRONT_URL
    # S3의 캐시 유통기한

    AWS_S3_OBJECT_PARAMETERS = {
    	'CacheControl': 'max-age=86400',
    }

    # Data 업로드 크기 제한
    DATA_UPLOAD_MAX_MEMORY_SIZE = 1024000000 # 1GB
    FILE_UPLOAD_MAX_MEMORY_SIZE = 1024000000

    # static, media 브라우저가 파일 조회는 여기서 함
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/' 

    # static, media 저장 경로(AWS_S3_CUSTOM_DOMAIN/url....)
    STATICFILES_STORAGE = 'myticket.asset_storage.S3StaticStorage'
    DEFAULT_FILE_STORAGE = 'myticket.asset_storage.S3DefaultStorage'

    #기본 설정 경로
    #STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'
    #DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    #######################################################################


    ############### DynamoDB-Session 설정을 위한 변수 #####################
    DYNAMODB_SESSIONS_AWS_REGION_NAME=access.AWS_REGION
    DYNAMODB_SESSIONS_AWS_ACCESS_KEY_ID = access.KEY_ID
    DYNAMODB_SESSIONS_AWS_SECRET_ACCESS_KEY = access.SECRET_KEY
    SESSION_ENGINE = 'dynamodb_sessions.backends.dynamodb' # Django에  캐시를 안 만듦

    SESSION_EXPIRE_AT_BROWSER_CLOSE=True
    DYNAMODB_SESSIONS_TABLE_NAME='myticket_sessions'
    DYNAMODB_SESSIONS_TABLE_HASH_ATTRIB_NAME='session_key'
    DYNAMODB_SESSIONS_ALWAYS_CONSISTENT=True
    DYNAMODB_SESSIONS_BOTO_SESSION='boto3.session.Session'
    #######################################################################


    #STATIC_URL = '/static/'  # s3가 참조할 django의 static 디렉터리 경로
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
    #MEDIA_URL = '/media/'   # s3가 참조할 django의 media 디렉터리 경로
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # myticket/media
